package com.skillsdevelopment.server;

import java.util.Map;
import java.util.UUID;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class InmemoryBookRepository implements BookRepository {
    private final Map<UUID, Book> books;

    public InmemoryBookRepository() {
        books = Stream.of(Book.builder().isbn("9781680502459").imageName("learn-functional-programming-with-elixir.jpg")
                .title("Learn Functional Programming with Elixir").description("Elixir's straightforward syntax and this guided tour give you a clean, simple path to learn modern functional programming techniques. No previous functional programming experience required! This book walks you through the right concepts at the right pace, as you explore immutable values and explicit data transformation, functions, modules, recursive functions, pattern matching, high-order functions, polymorphism, and failure handling, all while avoiding side effects. Don't board the Elixir train with an imperative mindset! To get the most out of functional languages, you need to think functionally. This book will get you there. Functional programming offers useful techniques for building maintainable and scalable software that solves today's difficult problems. The demand for software written in this way is increasing - you don't want to miss out. In this book, you'll not only learn Elixir and its features, you'll also learn the mindset required to program functionally. Elixir's clean syntax is excellent for exploring the critical skills of using functions and concurrency.Start with the basic techniques of the functional way: working with immutable data, transforming data in discrete steps, and avoiding side effects. Next, take a deep look at values, expressions, functions, and modules. Then extend your programming with pattern matching and flow control with case, if, cond, and functions. Use recursive functions to create iterations. Work with data types such as lists, tuples, and maps. Improve code reusability and readability with Elixir's most common high-order functions. Explore how to use lazy computation with streams, design your data, and take advantage of").build(),
                Book.builder().isbn("9781292061429").imageName("modern-operating-systems-global-edition.jpg")
                .title("Modern Operating Systems: Global Edition").description("Description is missing.").build(),
                Book.builder().isbn("9781463777357").imageName("modern-methods-of-systems-engineering-with-an-introduction-to-pattern-and-model-based-methods.jpg")
                .title("Modern Methods of Systems Engineering: With an Introduction to Pattern and Model Based Methods").description("Description is missing.").build(),
                Book.builder().isbn("9780763773878").imageName("web-programming-and-internet-technologies-an-e-commerce-approach.jpg")
                .title("Web Programming And Internet Technologies: An E-Commerce Approach").description("Today's Web programmers are required to understand and use the tools and skills for both client and server-side programming. Web Programming and Internet Technologies: An E-Commerce Approach provides an accessible, comprehensive introduction to creating fully functioning websites with e-commerce capabilities. Ideal for the one-term course, or as a self-learning guide for professionals, the authors weave a continuing case study of a real-world commercial enterprise throughout the text that gradually grows in sophistication. Introductory chapters ask readers to create a simple website that uses the basic features of XHTML. Readers will continue to modify and expand their early work, creating a centralized mechanism for changing the look and feel of the site via cascading style sheets, and incorporating JavaScript, PHP, MySQL, and much more. A CD-ROM is included with every new printed copy of the text and includes complete and pre-tested XHTML and CSS markup for all web pages discussed, as well as all associated JavaScript and PHP scripts, and the data for setting up the MySQL database. With its hands-on, active-learning approach, students using this new full-color text will see, and experience first-hand, the many levels and capabilities of programming for the world wide web.Key Features:-Based on a real business model, this text provides a comprehensive introduction to all aspects of creating a complete website with e-commerce capabilities.-Uses a project-based approach that asks readers to develop a website whose functionality will parallel that of the real-world case study in the text.-Includes examples and screen shots of real websites throughout for readers to reference.-Presents and utilizes maintstream and relevant open-source and widely used technologies: XHTML, CSS, JavaScript, PHP, MySQL, XML, and more.-Every chapter concludes with a collection of activities to assure the reader has a full understanding of the chapter material. These activities include: quick questions to test the readers basic knowledge of the content; short exercises to improve basic understanding; 'exercises on the parallel project' that guide the reader through creating his/her own fully functional commercial website; a section titled 'What Else You May Want or Need to Know', containing additional information relevant to the chapter; and finally, a reference section with links to websites for further details and explanations of the topics covered in the chapter.-The accompanying CD-ROM contains complete and pre-tested XHTML and CSS markup for all web pages discussed in teh text, as well as all associated JavaScript and PHP scripts, and the data for setting up the MySQL database (eBook version doe not include the CD-ROM).").build(),
                Book.builder().isbn("9780134154367").imageName("calculus-a-complete-course.jpg")
                .title("Calculus: A Complete Course").description("Proven in North America and abroad, this classic text has earned a reputation for excellent accuracy and mathematical rigour. Previous editions have been praised for providing complete and precise statements of theorems, using geometric reasoning in applied problems, and for offering a range of applications across the sciences. Written in a clear, coherent, and readable form, Calculus: A Complete Course makes student comprehension a clear priority. Note: You are purchasing a standalone product; MyMathLab does not come packaged with this content. Students, if interested in purchasing this title with MyMathLab, ask your instructor for the correct package ISBN and Course ID. Instructors, contact your Pearson representative for more information.If you would like to purchase both the physical text and MyMathLab, search for:0134588673 / 9780134588674 Calculus: A Complete Course Plus MyMathLab with Pearson eText -- Access Card PackagePackage consists of: 0134154363 / 9780134154367 Calculus: A Complete Course0134528727 / 9780134528724 MyMathLab with Pearson eText -- Standalone Access Card -- for Calculus: A Complete Course").build(),
                Book.builder().isbn("9781584884552").imageName("a-practical-guide-to-data-structures-and-algorithms-using-java.jpg")
                .title("A Practical Guide to Data Structures and Algorithms using Java").description("Although traditional texts present isolated algorithms and data structures, they do not provide a unifying structure and offer little guidance on how to appropriately select among them. Furthermore, these texts furnish little, if any, source code and leave many of the more difficult aspects of the implementation as exercises. A fresh alternative to conventional data structures and algorithms books, A Practical Guide to Data Structures and Algorithms using Java presents comprehensive coverage of fundamental data structures and algorithms in a unifying framework with full implementation details. Recognizing that software development is a top-down process, this applications-centered book provides careful guidance to students and practitioners. Complete and thoroughly integrated Java implementations expose key differences among a wide range of important data structures, including many useful abstract data types not provided in standard Java libraries. Fundamental algorithms appear within the context of their supporting data structures. Case studies, examples, decision trees, and comparison charts throughout the stylized presentation illustrate and support an efficient methodology for the careful selection and application of data structures and algorithms. Appendices summarize major features of the Java programming language, introduce asymptotic notation and complexity analysis, and discuss design patterns applied in the book. A true marriage of theory and practice, this book sets a new standard as a comprehensive practical guide to data structures and algorithms. Practitioners and students will reach for this book often to quickly identify the best data structure or algorithm for their applications.").build(),
                Book.builder().isbn("9781789616101").imageName("r-programming-fundamentals.jpg")
                .title("R Programming Fundamentals").description("Study data analysis and visualization to successfully analyze data with RKey FeaturesGet to grips with data cleaning methodsExplore statistical concepts and programming in R, including best practicesBuild a data science project with real-world examplesBook DescriptionR Programming Fundamentals, focused on R and the R ecosystem, introduces you to the tools for working with data. To start with, you'll understand you how to set up R and RStudio, followed by exploring R packages, functions, data structures, control flow, and loops.Once you have grasped the basics, you'll move on to studying data visualization and graphics. You'll learn how to build statistical and advanced plots using the powerful ggplot2 library. In addition to this, you'll discover data management concepts such as factoring, pivoting, aggregating, merging, and dealing with missing values.By the end of this book, you'll have completed an entire data science project of your own for your portfolio or blog.What you will learnUse basic programming concepts of R such as loading packages, arithmetic functions, data structures, and flow controlImport data to R from various formats such as CSV, Excel, and SQLClean data by handling missing values and standardizing fieldsPerform univariate and bivariate analysis using ggplot2Create statistical summary and advanced plots such as histograms, scatter plots, box plots, and interaction plotsApply data management techniques, such as factoring, pivoting, aggregating, merging, and dealing with missing values, on the example datasetsWho this book is forR Programming Fundamentals is for you if you are an analyst who wants to grow in the field of data science and explore the latest tools.").build(),
                Book.builder().isbn("9780691198309").imageName("statistics-data-mining-and-machine-learning-in-astronomy-a-practical-python-guide-for-the-analysis-of-survey-data-updated-edition.jpg")
                .title("Statistics, Data Mining, and Machine Learning in Astronomy: A Practical Python Guide for the Analysis of Survey Data, Updated Edition").description("Description is missing.").build(),
                Book.builder().isbn("9781605661483").imageName("breakthrough-perspectives-in-network-and-data-communications-security-design-and-applications.jpg")
                .title("Breakthrough Perspectives in Network and Data Communications Security, Design, and Applications").description("Modern organizations are critically dependent on data communications and network systems utilized in managing information and communications, vital to continuity and success of operations. \"\"Breakthrough Perspectives in Network and Data Communications Security, Design and Applications\"\" addresses key issues and offers expert viewpoints into the field of network and data communications, providing the academic, information technology, and managerial communities with the understanding necessary to implement robust, secure, and effective solutions. This much-needed addition to library and professional collections offers a matchless set of high quality research articles and premier technologies to address the most salient issues in network and data communications.").build(),
                Book.builder().isbn("9781680502534").imageName("seven-databases-in-seven-weeks-a-guide-to-modern-databases-and-the-nosql-movement.jpg")
                .title("Seven Databases in Seven Weeks: A Guide to Modern Databases and the Nosql Movement").description("Data is getting bigger and more complex by the day, and so are your choices in handling it. Explore some of the most cutting-edge databases available - from traditional relational databases to newer NoSQL approaches - and make informed decisions about challenging data storage problems. This is the only comprehensive guide to the world of NoSQL databases, with in-depth practical and conceptual introductions to seven different technologies: Redis, Neo4J, CouchDB, MongoDB, HBase, Postgres, and DynamoDB. This second edition includes a new chapter on DynamoDB and updated content for each chapter. While relational databases such as MySQL remain as relevant as ever, the alternative, NoSQL paradigm has opened up new horizons in performance and scalability and changed the way we approach data-centric problems. This book presents the essential concepts behind each database alongside hands-on examples that make each technology come alive. With each database, tackle a real-world problem that highlights the concepts and features that make it shine.Along the way, explore five database models - relational, key/value, columnar, document, and graph - from the perspective of challenges faced by real applications. Learn how MongoDB and CouchDB are strikingly different, make your applications faster with Redis and more connected with Neo4J, build a cluster of HBase servers using cloud services such as Amazon's Elastic MapReduce, and more. This new edition brings a brand new chapter on DynamoDB, updated code samples and exercises, and a more up-to-date account of each database's feature set. Whether you're a programmer building the next big thing, a data scientist seeking solutions to thorny problems, or a technology enthusiast venturing into new territory, you will find something to inspire you in this book. What You Need: You'll need a *nix shell (Mac OS or Linux preferred, Windows users will need Cygwin), Java 6 (or greater), and Ruby 1.8.7 (or greater). Each chapter will list the downloads required for that database.").build(),
                Book.builder().isbn("9780817639273").imageName("comparative-metric-semantics-of-programming-languages.jpg")
                .title("Comparative Metric Semantics of Programming Languages").description("During the last three decades several different styles of semantics for program- ming languages have been developed. This book compares two of them: the operational and the denotational approach. On the basis of several exam- ples we show how to define operational and denotational semantic models for programming languages. Furthermore, we introduce a general technique for comparing various semantic models for a given language. We focus on different degrees of nondeterminism in programming lan- guages. Nondeterminism arises naturally in concurrent languages. It is also an important concept in specification languages. In the examples discussed, the degree of non determinism ranges from a choice between two alternatives to a choice between a collection of alternatives indexed by a closed interval of the real numbers. The former arises in a language with nondeterministic choices. A real time language with dense choices gives rise to the latter. We also consider the nondeterministic random assignment and parallel composition, both couched in a simple language. Besides non determinism our four example languages contain some form of recursion, a key ingredient of programming languages.").build(),
                Book.builder().isbn("9781849966344").imageName("robotics.jpg")
                .title("Robotics").description("The classic text on robot manipulators now covers visual control, motion planning and mobile robots too!Based on the successful Modelling and Control of Robot Manipulators by Sciavicco and Siciliano (Springer, 2000), Robotics provides the basic know-how on the foundations of robotics: modelling, planning and control. It has been expanded to include coverage of mobile robots, visual control and motion planning. A variety of problems is raised throughout, and the proper tools to find engineering-oriented solutions are introduced and explained.The text includes coverage of fundamental topics like kinematics, and trajectory planning and related technological aspects including actuators and sensors.To impart practical skill, examples and case studies are carefully worked out and interwoven through the text, with frequent resort to simulation. In addition, end-of-chapter exercises are proposed, and the book is accompanied by an electronic solutions manual containing the MATLAB (R) code for computer problems; this is available free of charge to those adopting this volume as a textbook for courses.").build(),
                Book.builder().isbn("9788120301450").imageName("graph-theory-with-applications-to-engineering-and-computer-science.jpg")
                .title("Graph Theory With Applications To Engineering And Computer Science").description("Description is missing.").build(),
                Book.builder().isbn("9783319944623").imageName("neural-networks-and-deep-learning.jpg")
                .title("Neural Networks and Deep Learning").description("This book covers both classical and modern models in deep learning. The primary focus is on the theory and algorithms of deep learning. The theory and algorithms of neural networks are particularly important for understanding important concepts, so that one can understand the important design concepts of neural architectures in different applications. Why do neural networks work? When do they work better than off-the-shelf machine-learning models? When is depth useful? Why is training neural networks so hard? What are the pitfalls? The book is also rich in discussing different applications in order to give the practitioner a flavor of how neural architectures are designed for different types of problems. Applications associated with many different areas like recommender systems, machine translation, image captioning, image classification, reinforcement-learning based gaming, and text analytics are covered. The chapters of this book span three categories:The basics of neural networks: Many traditional machine learning models can be understood as special cases of neural networks. An emphasis is placed in the first two chapters on understanding the relationship between traditional machine learning and neural networks. Support vector machines, linear/logistic regression, singular value decomposition, matrix factorization, and recommender systems are shown to be special cases of neural networks. These methods are studied together with recent feature engineering methods like word2vec.Fundamentals of neural networks: A detailed discussion of training and regularization is provided in Chapters 3 and 4. Chapters 5 and 6 present radial-basis function (RBF) networks and restricted Boltzmann machines.Advanced topics in neural networks: Chapters 7 and 8 discuss recurrent neural networks and convolutional neural networks. Several advanced topics like deep reinforcement learning, neural Turing machines, Kohonen self-organizing maps, and generative adversarial networks are introduced in Chapters 9 and 10.The book is written for graduate students, researchers, and practitioners. Numerous exercises are available along with a solution manual to aid in classroom teaching. Where possible, an application-centric view is highlighted in order to provide an understanding of the practical uses of each class of techniques.").build(),
                Book.builder().isbn("9781292023946").imageName("algorithm-design-pearson-new-international-edition.jpg")
                .title("Algorithm Design: Pearson New International Edition").description("Description is missing.").build()
        ).collect(Collectors.toConcurrentMap(book -> UUID.randomUUID(), book -> book));
    }

    @Override
    public Book get(final UUID id) {
        return books.get(id);
    }

    @Override
    public Map<UUID, Book> getAllMatching(final String titleQuery) {
        return books.entrySet().stream().filter(uuidBookEntry -> uuidBookEntry.getValue().getTitle().contains(titleQuery))
                .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue));
    }
}
